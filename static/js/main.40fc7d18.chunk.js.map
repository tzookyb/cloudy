{"version":3,"sources":["services/weatherService.js","store.js","cmps/weather/TempToggle.jsx","cmps/Header.jsx","cmps/TimeDate.jsx","assets/svg/react-original.svg","assets/svg/mobx.svg","assets/svg/sass-original.svg","cmps/About.jsx","cmps/weather/LocationModeSelector.jsx","cmps/weather/Suggestions.jsx","cmps/weather/Location.jsx","cmps/weather/Current.jsx","cmps/weather/Forecast.jsx","cmps/weather/WeatherInfo.jsx","cmps/Weather.jsx","assets/svg/github-original.svg","assets/svg/linkedin-original.svg","cmps/Footer.jsx","App.jsx","reportWebVitals.js","index.js","assets/img/logo.png"],"names":["API_KEY","BASE_URL","weatherService","getLocation","getSuggestions","getForecast","coords","a","lat","lng","httpService","location","name","searchTerm","query","api","axios","get","res","data","console","error","store","makeAutoObservable","isMetric","locationMode","weatherMode","locationCoords","weatherInfo","window","autorun","then","log","runInAction","TempToggle","observer","useContext","StoreContext","onClick","Header","useState","isOpen","setIsOpen","history","useHistory","routeTo","route","push","className","src","require","default","alt","toggled","toggle","rounded","TimeDate","intervalId","React","useRef","useEffect","getDate","current","setInterval","clearInterval","date","setDate","time","setTime","greet","setGreet","now","dayjs","hour","format","About","reactSvg","mobx","sassSvg","LocationModeSelector","setMode","action","mode","txt","map","button","idx","Suggestions","places","pickLocation","setSearchTerm","setLocation","place","lon","length","Fragment","Location","isSearching","setIsSearching","suggestions","setSuggestions","inputref","isMyLocation","debouncedSearch","navigator","geolocation","getCurrentPosition","position","latitude","longitude","code","alert","_","debounce","value","ref","type","placeholder","onChange","ev","target","disabled","size","Current","localTime","localtime","split","splice","lastUpdated","last_updated","reverse","join","temp","temp_c","temp_f","feelsLike","feelslike_c","feelslike_f","precip","precip_mm","precip_in","wind","wind_dir","wind_kph","wind_mph","condition","text","icon","humidity","Forecast","forecastday","forecast","forecastDay","day","mintemp_c","maxtemp_c","mintemp_f","maxtemp_f","maxwind_kph","maxwind_mph","daily_chance_of_rain","daily_chance_of_snow","WeatherInfo","Weather","Footer","href","title","border","github","linkedin","createContext","StoreProvider","children","Provider","App","exact","path","to","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","clear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40fc7d18.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = 'cd3c450c9fe64efe8c8114500201911';\r\nconst BASE_URL = 'http://api.weatherapi.com/v1';\r\n\r\nexport const weatherService = {\r\n    getLocation,\r\n    getSuggestions,\r\n    getForecast,\r\n}\r\n\r\nasync function getLocation(coords) {\r\n    if (!coords) return;\r\n    else coords = `${coords.lat},${coords.lng}`;\r\n    let location = await httpService('search', coords)\r\n    location = location[0].name;\r\n    return location;\r\n}\r\n\r\nasync function getSuggestions(searchTerm) {\r\n    if (!searchTerm) return;\r\n    return await httpService('search', searchTerm);\r\n}\r\n\r\nasync function getForecast(coords) {\r\n    if (!coords) return;\r\n    const query = `${coords.lat},${coords.lng}&days=3`;\r\n    return await httpService('forecast', query);\r\n}\r\n\r\nasync function httpService(api, query) {\r\n    try {\r\n        const res = await axios.get(`${BASE_URL}/${api}.json?key=${API_KEY}&q=${query}`,)\r\n        return res.data;\r\n    } catch (error) {\r\n        console.error(`Had trouble getting to: ${api},\\nwith query: ${query}`);\r\n        console.error(error);\r\n    }\r\n}","import { autorun, makeAutoObservable, runInAction } from \"mobx\"\r\nimport { weatherService } from \"./services/weatherService\";\r\n\r\nexport const store = makeAutoObservable({\r\n    isMetric: true,\r\n    locationMode: null,\r\n    weatherMode: null,\r\n    locationCoords: null,\r\n    weatherInfo: null\r\n})\r\nwindow.store = store;\r\n\r\nautorun(() => {\r\n    if (store.locationCoords) {\r\n        weatherService.getForecast(store.locationCoords)\r\n            .then(res => {\r\n            console.log(\"res\", res)\r\n                runInAction(() => store.weatherInfo = res);\r\n            })\r\n    };\r\n})","import React, { useContext } from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { StoreContext } from '../../App'\r\nimport { runInAction } from 'mobx'\r\n\r\nexport const TempToggle = observer(() => {\r\n    const store = useContext(StoreContext)\r\n\r\n    const toggleTempMode = () => {\r\n        runInAction(() => store.isMetric = !store.isMetric);\r\n    }\r\n\r\n    return (\r\n        <div onClick={toggleTempMode}>\r\n            \r\n            {store.isMetric ? 'Celsius' : 'Fahrenheit'}\r\n        </div>\r\n    )\r\n})","import React, { useState } from 'react'\r\nimport { Twirl as Hamburger } from 'hamburger-react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TempToggle } from './weather/TempToggle';\r\n\r\nexport default function Header() {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const routeTo = (route) => {\r\n        if (isOpen) setIsOpen(false);\r\n        console.log(\"routeTo -> history\", history)\r\n        history.push(route);\r\n    }\r\n\r\n    return (\r\n        <header className={`main-container ${isOpen ? 'open' : ''}`}>\r\n            <div className=\"flex align-center space-between\">\r\n                <div className=\"flex gap5 align-center\">\r\n                    <img src={require('../assets/img/logo.png').default} alt=\"logo\" className=\"logo\" />\r\n                    <h1>Weather-App</h1>\r\n                </div>\r\n                <nav className=\"flex align-center\">\r\n                    <TempToggle />\r\n                    <ul className=\"clean-list flex align-center\">\r\n                        <li onClick={() => routeTo('/about')}>About</li>\r\n                        <li onClick={() => routeTo('/weather')}>Weather</li>\r\n                    </ul>\r\n\r\n                </nav>\r\n                <Hamburger\r\n                    className=\"hamburger\"\r\n                    toggled={isOpen}\r\n                    toggle={() => setIsOpen(!isOpen)}\r\n                    rounded\r\n                />\r\n            </div>\r\n            <div onClick={() => setIsOpen(false)} className={`screen ${isOpen ? 'open' : ''}`}></div>\r\n        </header >\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport dayjs from 'dayjs'\r\n\r\nexport const TimeDate = () => {\r\n    const intervalId = React.useRef(null)\r\n    useEffect(() => {\r\n        getDate();\r\n        intervalId.current = setInterval(() => {\r\n            getDate()\r\n        }, 1000)\r\n        return () => {\r\n            clearInterval(intervalId.current);\r\n        }\r\n    }, [])\r\n\r\n    const [date, setDate] = useState('')\r\n    const [time, setTime] = useState('')\r\n    const [greet, setGreet] = useState('')\r\n\r\n    const getDate = () => {\r\n        const now = dayjs();\r\n        const hour = now.hour();\r\n        let greet;\r\n\r\n        if (hour >= 5 && hour < 12) greet = 'Good Morning!';\r\n        else if (hour >= 12 && hour < 18) greet = 'Good Afternoon!';\r\n        else if (hour >= 18 && hour < 24) greet = 'Good Evening!';\r\n        else greet = 'Good Night!';\r\n        setGreet(greet);\r\n\r\n        setDate(now.format('dddd D/M/YYYY'));\r\n        setTime(now.format('HH:mm:ss'));\r\n    }\r\n\r\n    return (\r\n        <section className=\"main-container\">\r\n            <div className=\"time flex space-between\">\r\n                <div className=\"flex column space-between\">\r\n                    <h3>{greet}</h3>\r\n                </div>\r\n                <div className=\"flex column flex-end gap10\">\r\n                    <h4>Today is {date}</h4>\r\n                    <div className=\"clock flex space-between\">\r\n                        <h4>The time now is: </h4>\r\n                        <h4>{time}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section >\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/react-original.7098e271.svg\";","export default __webpack_public_path__ + \"static/media/mobx.b2519d0d.svg\";","export default __webpack_public_path__ + \"static/media/sass-original.8ec16938.svg\";","import React from 'react'\r\nimport reactSvg from '../assets/svg/react-original.svg'\r\nimport mobx from '../assets/svg/mobx.svg'\r\nimport sassSvg from '../assets/svg/sass-original.svg'\r\n\r\nexport default function About() {\r\n    return (\r\n        <section className=\"main-container\">\r\n            <div className=\"about flex column\">\r\n\r\n                <h1>About</h1>\r\n                <p>This is a weather app I created.</p>\r\n                <p>It's main features are:</p>\r\n                <ul>\r\n                    <li>Finding out your location</li>\r\n                    <li>Searching for other locations</li>\r\n                    <li>Getting weather forecast using weatherapi.com</li>\r\n                </ul>\r\n\r\n                <h4>This app has been coded using these technologies:</h4>\r\n                <div className=\"tech-grid\">\r\n                    <div><img alt=\"react\" src={reactSvg} />React.js</div>\r\n                    <div><img alt=\"mobx\" src={mobx} />MobX</div>\r\n                    <div><img alt=\"sass\" src={sassSvg} />Sass</div>\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { StoreContext } from '../../App'\r\nimport { action } from 'mobx';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport const LocationModeSelector = observer(() => {\r\n    const store = useContext(StoreContext);\r\n\r\n    const setMode = action((mode) => {\r\n        store.weatherInfo = null;\r\n        store.locationMode = mode\r\n    });\r\n\r\n    const buttons = [\r\n        { mode: 'my-location', txt: 'My Location' },\r\n        { mode: 'places', txt: 'Other Places' }\r\n    ]\r\n\r\n    return (\r\n        <div className=\"flex gap10\">\r\n            {buttons.map((button, idx) => (\r\n                <button\r\n                    key={idx}\r\n                    className={`mode-btn ${store.locationMode === button.mode ? 'location-mode-active' : ''}`}\r\n                    onClick={() => setMode(button.mode)}>\r\n                    { button.txt}\r\n                </button>\r\n            ))}\r\n        </div >\r\n    )\r\n})","import React, { useContext } from 'react'\r\nimport { action } from 'mobx'\r\nimport { StoreContext } from '../../App'\r\n\r\nexport const Suggestions = ({ places, pickLocation, searchTerm, setSearchTerm }) => {\r\n    const store = useContext(StoreContext)\r\n\r\n    const setLocation = action((place) => {\r\n        pickLocation(place.name);\r\n        const coords = { lat: place.lat, lng: place.lon };\r\n        store.locationCoords = coords;\r\n    })\r\n    if (!places.length && searchTerm) return (\r\n        <React.Fragment>\r\n            <h3 className=\"no-results flex justify-center\">No results found...</h3>\r\n            <button onClick={() => setSearchTerm('')}>Clear search</button>\r\n        </React.Fragment>\r\n    )\r\n\r\n    return (\r\n        <ul className=\"suggest-list clean-list\">\r\n            {places.map((place, idx) => (\r\n                <li key={idx} className=\"suggest cursor-pointer\" onClick={() => setLocation(place)}>{place.name}</li>\r\n            ))\r\n            }\r\n        </ul >\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport _ from 'lodash';\r\nimport { StoreContext } from '../../App';\r\nimport { weatherService } from '../../services/weatherService';\r\nimport { runInAction } from 'mobx';\r\nimport { Suggestions } from './Suggestions';\r\nimport { WindMillLoading } from 'react-loadingg';\r\n\r\nexport const Location = observer(() => {\r\n    const store = useContext(StoreContext);\r\n    const { locationMode } = store;\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [isSearching, setIsSearching] = useState(false);\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const inputref = useRef(null);\r\n    const isMyLocation = locationMode === 'my-location';\r\n\r\n    useEffect(() => {\r\n        debouncedSearch(null);\r\n        setSearchTerm('');\r\n        setIsSearching(false);\r\n        if (isMyLocation) {\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition((position) => {\r\n                    const coords = { lat: position.coords.latitude, lng: position.coords.longitude };\r\n                    weatherService.getLocation(coords).then(res => setSearchTerm(res));\r\n                    runInAction(() => store.locationCoords = coords)\r\n                }, async (error) => {\r\n                    if (error.code === 1) alert('Allow Location discovery to use \"My Location\" feature');\r\n                });\r\n            } else alert('Geolocation is not supported by this browser');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [locationMode])\r\n\r\n    const handleInput = (value) => {\r\n        setSearchTerm(value);\r\n        setIsSearching(true);\r\n        debouncedSearch(value);\r\n        if (!value) setIsSearching(false);\r\n    }\r\n\r\n    const pickLocation = (place) => {\r\n        setSuggestions([]);\r\n        setSearchTerm(place);\r\n    }\r\n\r\n    const debouncedSearch = useRef(_.debounce((value) => {\r\n        if (!value) return;\r\n        weatherService.getSuggestions(value)\r\n            .then(res => {\r\n                setSuggestions(res);\r\n                setIsSearching(false);\r\n            })\r\n    }, 1500)).current;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                ref={inputref}\r\n                className=\"location\"\r\n                type=\"search\"\r\n                value={searchTerm}\r\n                placeholder={isMyLocation ? 'Getting your location...' : 'Search for Location'}\r\n                onChange={(ev) => handleInput(ev.target.value)}\r\n                disabled={isMyLocation}\r\n            />\r\n            <div>\r\n\r\n                {!isMyLocation && isSearching ? <WindMillLoading size=\"large\" className=\"loading\" /> :\r\n                    <Suggestions searchTerm={searchTerm} pickLocation={pickLocation} places={suggestions} />\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from 'react'\r\n\r\nexport default function Current({ current, location, isMetric }) {\r\n\r\n    const localTime = location.localtime.split(' ').splice(1, 1)[0];\r\n    let lastUpdated = (current.last_updated);\r\n    lastUpdated = lastUpdated.split(' ');\r\n    lastUpdated = lastUpdated[1] + ' ' + lastUpdated[0].split('-').reverse().join('/');\r\n    const temp = isMetric ? current.temp_c : current.temp_f;\r\n    const feelsLike = isMetric ? current.feelslike_c : current.feelslike_f;\r\n    const precip = isMetric ? `${current.precip_mm}mm` : `${current.precip_in}in.`;\r\n    const wind = `${current.wind_dir} ${isMetric ? current.wind_kph : current.wind_mph} ${isMetric ? 'kph' : 'mph'}`\r\n\r\n    return (\r\n        <article className=\"current\">\r\n            <h3>Current Weather:</h3>\r\n            <div className=\"local-time\">Local time: {localTime}</div>\r\n            <small className=\"last-update\">Forecast last updated at: {lastUpdated}</small>\r\n            <div className=\"condition\">\r\n                {current.condition.text}\r\n                <img src={current.condition.icon} alt=\"condition\" />\r\n            </div>\r\n            <div className=\"temp\">Temperature: {temp}°{isMetric ? 'C' : 'F'}</div>\r\n            <div className=\"feels\">Feels Like: {feelsLike}°{isMetric ? 'C' : 'F'}</div>\r\n            <div className=\"extra-info\">\r\n                <div className=\"precip\">Precipitation: {precip}</div>\r\n                <div className=\"humidity\">Humidity: {current.humidity}%</div>\r\n                <div className=\"wind\">Wind: {wind}</div>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Forecast({ isMetric, forecast }) {\r\n    const { forecastday } = forecast;\r\n\r\n    return (\r\n        <article className=\"forecast\">\r\n            <h2>3 Day Forecast:</h2>\r\n            {forecastday.map(forecastDay => {\r\n                const { day } = forecastDay\r\n                const date = forecastDay.date.split('-').reverse().join('/')\r\n                const temp = isMetric ? `${day.mintemp_c} - ${day.maxtemp_c}°C` : `${day.mintemp_f} - ${day.maxtemp_f}°F`;\r\n                const wind = isMetric ? day.maxwind_kph + ' kph' : day.maxwind_mph + ' mph';\r\n\r\n                return <div className=\"forecast-day\" key={forecastDay.date}>\r\n                    <div className=\"date\">{date}</div>\r\n                    <div className=\"condition\">\r\n                        {day.condition.text}\r\n                        <div className=\"icon\">\r\n                            <img src={day.condition.icon} alt=\"condition\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"temp\">Temperatures: {temp}</div>\r\n                    <div className=\"rain\">{day.daily_chance_of_rain}%</div>\r\n                    <div className=\"snow\">{day.daily_chance_of_snow}%</div>\r\n                    <div className=\"wind\">Max wind: {wind}</div>\r\n\r\n\r\n                </div>\r\n            })}\r\n        </article>\r\n    )\r\n}","import { observer } from 'mobx-react-lite'\r\nimport React, { useContext } from 'react'\r\nimport { StoreContext } from '../../App'\r\nimport Current from './Current'\r\nimport Forecast from './Forecast'\r\n\r\nexport const WeatherInfo = observer(() => {\r\n    const store = useContext(StoreContext)\r\n    const { weatherInfo, isMetric } = store;\r\n    const { current, forecast, location } = weatherInfo;\r\n\r\n    return (\r\n        <section>\r\n            <Current location={location} current={current} isMetric={isMetric} />\r\n            <Forecast forecast={forecast} isMetric={isMetric} />\r\n        </section >\r\n    )\r\n})","import React, { useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { StoreContext } from '../App';\r\n// CMPS:\r\nimport { LocationModeSelector } from './weather/LocationModeSelector';\r\nimport { Location } from './weather/Location';\r\nimport { WeatherInfo } from './weather/WeatherInfo';\r\n\r\nexport const Weather = observer(() => {\r\n    const store = useContext(StoreContext);\r\n    return (\r\n        <section className=\"weather flex column align-center flex-1\">\r\n            <LocationModeSelector />\r\n            <Location />\r\n            {store.weatherInfo && <WeatherInfo />}\r\n        </section>\r\n    )\r\n})","export default __webpack_public_path__ + \"static/media/github-original.fad4b944.svg\";","export default __webpack_public_path__ + \"static/media/linkedin-original.6494960c.svg\";","import React from 'react'\r\nimport github from '../assets/svg/github-original.svg'\r\nimport linkedin from '../assets/svg/linkedin-original.svg'\r\nexport default function Footer() {\r\n    return (\r\n        <footer className=\"flex align-center space-between\">\r\n            <div className=\"flex align-center gap5\">\r\n                <a href=\"https://www.weatherapi.com/\" title=\"Free Weather API\"><img src='//cdn.weatherapi.com/v4/images/weatherapi_logo.png' alt=\"Weather data by WeatherAPI.com\" border=\"0\" /></a>\r\n                <div className=\"powered-by\">\r\n                    Powered by <a href=\"https://www.weatherapi.com/\" title=\"Weather API\">WeatherAPI.com</a>\r\n                </div>\r\n            </div>\r\n            <div className=\"copyright flex flex-end gap10\">\r\n                <a href=\"https://github.com/tzookyb\"><img className=\"social\" src={github} title=\"to my github profile\" alt=\"github\" /></a>\r\n                <a href=\"https://www.linkedin.com/in/idanbenjamin\"><img className=\"social\" src={linkedin} title=\"to my linkedin profile\" alt=\"linkedin\" /></a>\r\n                <small>&copy; 2020<br /> Idan Benjamin</small>\r\n            </div>\r\n        </footer>\r\n    )\r\n}","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { store } from './store'\n// CMPS\nimport Header from './cmps/Header'\nimport { TimeDate } from './cmps/TimeDate'\nimport About from './cmps/About'\nimport { Weather } from './cmps/Weather'\nimport Footer from './cmps/Footer'\n\n// STORE:\nexport const StoreContext = React.createContext();\nconst StoreProvider = ({ children }) => {\n  return <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n}\n\n// APP:\nexport default function App() {\n  return (\n    <StoreProvider>\n      <div className=\"app flex column\">\n        <Header />\n        <main>\n          <TimeDate />\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/about\" />\n            </Route>\n            <Route component={About} path=\"/about\" />\n            <Route component={Weather} path=\"/weather\" />\n          </Switch>\n        </main>\n        <Footer />\n      </div>\n    </StoreProvider>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App';\nimport './assets/scss/global.scss';\nimport reportWebVitals from './reportWebVitals';\nconsole.clear();\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router >\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","export default __webpack_public_path__ + \"static/media/logo.e50c6087.png\";"],"sourceRoot":""}